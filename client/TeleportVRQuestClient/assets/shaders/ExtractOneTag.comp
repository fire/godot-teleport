#extension GL_OES_EGL_image_external_essl3 : require
precision highp float;
// ALL light data is passed in as tags.
struct LightTag
{
    mat4 worldToShadowMatrix;
    vec2 shadowTexCoordOffset;
    vec2 shadowTexCoordScale;
    vec4 colour;
    vec3 position;
    int	pospad;
    vec3 direction;
    uint uid32;
    float is_spot;
    float is_point;
    float shadow_strength;
    float radius;
};

struct VideoTagDataCube
{
    vec3 cameraPosition;
    int lightCount;
    vec4 cameraRotation;
    LightTag lightTags[4];
};

layout(rgba8, binding = 0) uniform writeonly lowp imageCube destTex;
layout(binding = 1) uniform highp samplerExternalOES videoFrameTexture;
layout(std140, binding = 2) uniform cubemapUB
{
    uvec2 dimensions;
    ivec2 sourceOffset;
    uint faceSize;
    uint mip;
    uint face;
} cub;

layout(std430,binding=0) buffer RWTagDataID_ssbo
{
    uvec4 RWTagDataID;
};

layout(std430, binding = 1) buffer TagDataCube_ssbo
{
    VideoTagDataCube tagDataCube;
};

layout(std430, binding = 2) buffer TagDataCubeArray_ssbo
{
    VideoTagDataCube tagDataCubeBuffer[32];
};
// From the encoded binary at bottom-right
layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void extract_tag_data()
{
    tagDataCube=tagDataCubeBuffer[RWTagDataID.x];
}
