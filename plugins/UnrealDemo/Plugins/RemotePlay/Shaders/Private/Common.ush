// (c) 2018 Simul.co

#include "/Engine/Public/Platform.ush"
struct FScreenVertexOutput
{
	float2 UV : TEXCOORD0;
	float4 Position : SV_POSITION;
};


// TODO: Expose those parameters to the capture component.
static const float TonemapGamma     = 2.2;
static const float TonemapExposure  = 1.0;
static const float TonemapPureWhite = 1.0;

// Reinhard tonemapping operator with gamma correction.
// TODO: Switch to filmic tonemapping ala Uncharted 2.
float3 PrepareTonemap(float4 SceneColor)
{
	const float PureWhiteSq = TonemapPureWhite * TonemapPureWhite;
	float Luminance = dot(SceneColor.rgb, float3(0.2126, 0.7152, 0.0722));

	float MappedLuminance = (Luminance * (1.0 + Luminance/PureWhiteSq)) / (1.0 + Luminance);
	float3 MappedColor = (MappedLuminance / Luminance) * SceneColor.rgb;
	return float3(MappedColor.rgb);
}

float4 Prepare(float4 SceneColour)
{
	float4 Colour = 0.5*SceneColour;
	return Colour;
}